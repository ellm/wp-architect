///////////////////////////////////////////////////////////////
// Mixins Directives
///////////////////////////////////////////////////////////////

// Mixin for rem Font Sizing and px fallback
///////////////////////////////////////////////////////////////
@mixin font-size($sizeValue: 1.6) {
  font-size: $sizeValue + px;
  font-size: ($sizeValue / 16) + rem;
}

// Clear Fix for Floats
///////////////////////////////////////////////////////////////
@mixin clear-fix {
	zoom: 1;
	&:after { clear: both; }
	&:after, &:before {
	    content: "";
	    display: table;
	}
}

// List Reset
///////////////////////////////////////////////////////////////
@mixin list-reset {
	list-style: none;
	padding-left: 0;
}

// Image Replacement
///////////////////////////////////////////////////////////////
@mixin ir {
	display: block;
	border: 0;
	text-indent: -999em;
	overflow: hidden;
	background-color: transparent;
	background-repeat: no-repeat;
	text-align: left;
	direction: ltr;
}

// Visually Hidden
///////////////////////////////////////////////////////////////
@mixin vh {
	border: 0;
	clip: rect(0 0 0 0);
	height: 1px;
	margin: -1px;
	overflow: hidden;
	padding: 0;
	position: absolute;
	width: 1px;
}

// Prevents long block level text from breaking outside layout
///////////////////////////////////////////////////////////////
@mixin word-wrap {
    -ms-word-wrap: break-word;
    word-wrap: break-word;
}

// Default Button
///////////////////////////////////////////////////////////////
@mixin button ($color , $textcolor) {
    background: $color;
    display: inline-block;
    color: $textcolor;
    padding: .5em 1em;

    &:hover{
        background: lighten($color, 3%);
        color: lighten($textcolor,6%);
        cursor: pointer;
        text-decoration: none;
    }

    &:focus, &:active, &:visited {
        color: lighten($textcolor,6%);
        background: darken($color, 3%);
        outline: none;
    }
}

// Link Set of States
///////////////////////////////////////////////////////////////
@mixin link-set($color, $colorVisited, $colorHover, $colorFocus) {
    text-decoration: none;
    color: $color;
    &:visited {color: $colorVisited;}
    &:hover {color: $colorHover;}
    &:focus {color: $colorFocus;}
    &:active {color: $colorFocus;}
}
